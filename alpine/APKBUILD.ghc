# Contributor: Mitch Tishmack <mitch.tishmack@gmail.com>
# Maintainer: Mitch Tishmack <mitch.tishmack@gmail.com>
pkgname=ghc
pkgver=7.10.1
pkgrel=0
pkgdesc="The Glasgow haskell compiler"
url="http://haskell.org"
arch="x86_64"
license="custom"
depends="bash gcc perl gmp-dev libffi"
depends_dev="linux-headers perl ncurses-dev gmp-dev libtool autoconf automake libxslt libffi-dev musl-dev"
makedepends="bzip2 xz gzip $depends_dev"
# If we aren't bootstrapping, we require the current ghc
# and cabal-install to compile ghc
if [ "$BOOTSTRAP" == "" ]; then
	makedepends="ghc-dev cabal-install $makedepends"
fi
install=""
subpackages="$pkgname-dev $pkgname-doc"
source="https://www.haskell.org/ghc/dist/$pkgver/ghc-$pkgver-src.tar.bz2 ghc-fpic.patch"

_builddir="$srcdir/$pkgname-$pkgver"
prepare() {
	local i
	cd "$_builddir"
	for i in $source; do
		case $i in
		*.patch) msg $i; patch -p1 -i "$srcdir"/$i || return 1;;
		esac
	done
}

build() {
	set -x
	if [ "$BOOTSTRAP" != "" ]; then
		export PATH="${PATH}:/usr/local/cross/bin:~/.cabal/bin:$_builddir/.cabal-sandbox/bin"
		cd / || return 1
		xz -d -c "$BOOTSTRAP" | \
		tar xf - || return 1
		cabal_version=1.22.6.0
		cd "$_builddir"
		echo 'main = putStrLn "ok"'> test.hs || return 1
		ghc --make test.hs || return 1
		./test || return 1
		rm test test.o test.hi || return 1
		curl -L "https://www.haskell.org/cabal/release/cabal-install-${cabal_version}/cabal-install-${cabal_version}.tar.gz" | gunzip -c - | tar xf - || return 1
		cd "cabal-install-${cabal_version}" || return 1
		export NO_DOCUMENTATION=yep
		export DEFAULT_CONFIGURE_OPTS="--shared"
		./bootstrap.sh --sandbox || return 1
		rm -fr "cabal-install-${cabal_version}" || return 1
	fi
	cabal update
	cabal sandbox init
	cabal install happy alex
	cat > mk/build.mk << "FIN"
SRC_HC_OPTS += -optl-pthread
SRC_HC_OPTS += -H32m -O0 -fPIC
SRC_CC_OPTS          += -O0 -fasm -fPIC
GhcLibHcOpts         += -O0 -fasm -fPIC
GhcHcOpts += -Rghc-timing -fPIC
SplitObjs = NO
STRIP = :
GhcRtsCcOpts += -O0
GhcRtsWays += p
V               = 0
BeConservative  = YES
FIN
	mv libraries/integer-gmp integer-gmp.old || return 1
	ln -s integer-gmp2 libraries/integer-gmp || return 1
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		--localstatedir=/var || return 1
	make -j8 || return 1
	make || return 1
}

package() {
	cd "$_builddir"
	make DESTDIR="$pkgdir" install || return 1
	settings=$(find "$pkgdir" -name settings -type f)
	# needed until ghc can emit pie assembly
	# ref https://ghc.haskell.org/trac/ghc/ticket/9007
	perl -pi -e 's/.*C compiler link flags.*/ \(\"C compiler link flags\"\, \"-nopie\"\)\,/' "$settings" || return 1
	install -Dm644 LICENSE "$pkgdir/usr/share/licenses/$pkgname/LICENSE" || return 1
	rm -f "$pkgdir"/usr/lib/*.la
}

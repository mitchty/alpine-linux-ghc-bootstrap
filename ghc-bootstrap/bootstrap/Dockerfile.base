# WIP: simplify generating a bootstrap compiler
from debian:8.0

# all needed packages for compiling
run apt-get update
run apt-get install -y \
      binutils-gold \
      musl-tools \
      build-essential \
      wget \
      curl \
      libncurses-dev \
      autoconf \
      elfutils \
      libgmp-dev \
      libtinfo-dev \
      zlib1g-dev \
      git \
      libtool \
      pkg-config \
      libffi-dev \
      cmake \
      g++ \
      python \
      pixz

# build llvm 3.5 with the same patches
# as alpine will use, need this for stage2 builds (and eventually arm)
env llvm 3.5.2
workdir /tmp
copy llvm-$llvm.src.tar.xz /tmp/llvm.txz
copy polly-$llvm.src.tar.xz /tmp/polly.txz
run tar xJpf /tmp/llvm.txz
run tar xJpf /tmp/polly.txz
copy llvm-0001-fix-shared-build.patch /tmp/llvm-0001-fix-shared-build.patch
copy llvm-0002-musl-triple.patch /tmp/llvm-0002-musl-triple.patch
copy llvm-0003-musl-hacks.patch /tmp/llvm-0003-musl-hacks.patch
copy bootstrap/llvm-3.5.2.sh /tmp/llvm.sh
run sh -x /tmp/llvm.sh

workdir /tmp

# Install stock bindist for cross compile, we use this
# to build a 7.10.3 compiler that includes the 3.6 patches.
env ghc 7.10.3
env arch x86_64
copy ghc-$ghc-$arch-deb8-linux.tar.xz /tmp/ghc.txz
run tar xJpf /tmp/ghc.txz
workdir /tmp/ghc-$ghc
run ./configure --prefix=/usr && make -j1 install
run rm -fr /tmp/ghc-$ghc

# bootstrap cabal and install alex/happy the same way apks are built
# only globally
env cabal_version 1.22.7.0
workdir /tmp
copy cabal-install-$cabal_version.tar.gz /tmp/cabal.tgz
run tar xzpf /tmp/cabal.tgz
workdir /tmp/cabal-install-$cabal_version
run ./bootstrap.sh --global --no-doc
run cabal update
run cabal install --global alex happy
workdir /tmp
run rm -fr /tmp/cabal-install-$cabal_version

# First up, install/compile the cross compiler with musl libc
# armv7 hard float cross compiler, we basically rebuild ghc again here with
# the cross compiler, and the llvm we built for x86_64 as well
workdir /tmp
run git clone --depth 1 https://github.com/GregorR/musl-cross.git musl-cross

# Contributor Travis Tilley <ttilley@gmail.com>
# Contributor Mitch Tishmack <mitch.tishmack@gmail.com>
# Maintainer: Travis Tilley <ttilley@gmail.com>
pkgname=llvm3.7
pkgname_short=llvm
pkgver=3.7.1
pkgrel=0
pkgdesc="low level virtual machine compiler system"
arch="all"
url="http://llvm.org/"
license="UOI-NCSA"
depends=""
makedepends="$depends_dev
	binutils-dev
	bison
	chrpath
	cmake
	flex
	groff
	isl-dev
	libffi-dev
	make
	file
	paxmark
	py-sphinx
	python
	python-dev
	zlib-dev
	"
install=
subpackages="$pkgname-static $pkgname-libs"
source="
	llvm-0001-Add-Musl-MuslEABI-and-Musl-EABIHF-triples.patch
	llvm-0002-Fix-build-with-musl-libc.patch
	llvm-0003-Fix-DynamicLibrary-to-build-with-musl-libc.patch
	llvm-nm-workaround.patch

	http://llvm.org/releases/$pkgver/llvm-$pkgver.src.tar.xz
	"

_builddir="$srcdir"/build

_cmake_common_flags="\
"


_srcdir="$srcdir"/"$pkgname_short-$pkgver.src"

prepare() {
	msg "Patching LLVM core..."
	cd "$_srcdir" || return 1
	update_config_sub || return 1
	sed -i -e '/case "\${UNAME_MACHINE}:\${UNAME_SYSTEM}:\${UNAME_RELEASE}:\${UNAME_VERSION}" in/i \' \
	       -e 'if [ x != "x$CBUILD" ]; then echo "$CBUILD"; exit; fi' \
		./autoconf/config.guess || return 1
	for i in $source; do
		case $i in
		llvm-*.patch)
			msg "Applying $i..."
			patch --ignore-whitespace -s -p1 -N -i "$srcdir"/$i || return 1
			;;
		esac
	done
	# remove some tests that fails
	rm test/tools/llvm-objdump/macho-compact-unwind-x86_64.test \
		test/tools/llvm-objdump/macho-compact-unwind-i386.test \
		test/Transforms/GlobalOpt/alias-used.ll \
		|| return 1
}

build() {
	mkdir -p "$_builddir"
	cd "$_builddir"

	# auto-detect it by guessing either.
	_ffi_include_dir="$(pkg-config --cflags-only-I libffi | sed 's|^-I||g')"

	cmake -G "Unix Makefiles" -Wno-dev \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_VERBOSE_MAKEFILE=NO \
		\
		-DFFI_INCLUDE_DIR="$_ffi_include_dir" \
		-DLLVM_BINUTILS_INCDIR=/usr/include/llvm-3.7 \
		-DLLVM_BUILD_DOCS=YES \
		-DLLVM_BUILD_EXAMPLES=NO \
		-DLLVM_BUILD_EXTERNAL_COMPILER_RT=ON \
		-DLLVM_BUILD_LLVM_DYLIB=ON \
		-DLLVM_BUILD_TESTS=YES \
		-DLLVM_DEFAULT_TARGET_TRIPLE=$CBUILD \
		-DLLVM_DYLIB_EXPORT_ALL=ON \
		-DLLVM_ENABLE_ASSERTIONS=NO \
		-DLLVM_ENABLE_CXX1Y=YES \
		-DLLVM_ENABLE_FFI=YES \
		-DLLVM_ENABLE_LIBCXX=NO \
		-DLLVM_ENABLE_PIC=YES \
		-DLLVM_ENABLE_RTTI=YES \
		-DLLVM_ENABLE_SPHINX=NO \
		-DLLVM_ENABLE_TERMINFO=YES \
		-DLLVM_ENABLE_ZLIB=YES \
		-DLLVM_HOST_TRIPLE=$CHOST \
		-DLLVM_INCLUDE_EXAMPLES=NO \
		-DLLVM_LINK_LLVM_DYLIB=ON \
		-DLLVM_TARGETS_TO_BUILD=all \
		\
		-DSPHINX_WARNINGS_AS_ERRORS=NO \
		"${_srcdir}" || return 1

	make llvm-tblgen || return 1
	make || return 1

	paxmark m bin/llvm-rtdyld
	paxmark m bin/lli
	paxmark m bin/lli-child-target

	paxmark m unittests/ExecutionEngine/MCJIT/MCJITTests
	paxmark m unittests/Support/SupportTests


	case "$CARCH" in
	arm*)
		# ARM has few failures in test suite
		# that we don't care about currently
		;;
	*)
		make check-llvm		|| return 1
		;;
	esac
}

package() {
	cd "$_builddir"
	make DESTDIR="$pkgdir" install
	file "$pkgdir"/usr/lib/*.so | awk -F: '$2~/ELF/{print $1}' | xargs -r chrpath -d
	file "$pkgdir"/usr/bin/* | awk -F: '$2~/ELF/{print $1}' | xargs -r chrpath -d
	for f in $(ls -d "$pkgdir"/usr/bin/*); do
		mv ${f} ${f}-3.7
	done
	mv "$pkgdir"/usr/lib/LLVMgold.so "$pkgdir"/usr/lib/LLVMgold.so.3.7
	mv "$pkgdir"/usr/lib/libLTO.so "$pkgdir"/usr/lib/libLTO.so.3.7
	mv "$pkgdir"/usr/lib/BugpointPasses.so "$pkgdir"/usr/lib/BugpointPasses.so.3.7
	rm "$pkgdir"/usr/lib/libLLVM.so 
}

static() {
	pkgdesc="LLVM static libraries"
	mkdir -p "$subpkgdir"/usr/lib
	mv "$pkgdir"/usr/lib/*.a "$subpkgdir"/usr/lib/
}

libs() {
	pkgdesc="LLVM runtiem libraries"
	mkdir -p "$subpkgdir"/usr/lib
	mv "$pkgdir"/usr/lib/libLLVM.so.[0-9]* "$subpkgdir"/usr/lib/
}


md5sums="b370ea6589931c560a92699b890dd888  llvm-0001-Add-Musl-MuslEABI-and-Musl-EABIHF-triples.patch
b0cd098117223159b76e96c3f884536b  llvm-0002-Fix-build-with-musl-libc.patch
9cc5050619f764ca9dc842a5ab122290  llvm-0003-Fix-DynamicLibrary-to-build-with-musl-libc.patch
785147afd8ab80fa95955a5637b6582f  llvm-nm-workaround.patch
bf8b3a2c79e61212c5409041dfdbd319  llvm-3.7.1.src.tar.xz"
sha256sums="6018671b549f3043ab4d7100956f0e05092d83de72b88edea199c91d5755d819  llvm-0001-Add-Musl-MuslEABI-and-Musl-EABIHF-triples.patch
e1b0fd5f6918d8c8404f3ec4b8d3ab8fbe8dadc2d6011792349b56e5e8ee51e2  llvm-0002-Fix-build-with-musl-libc.patch
fc28356bf0d5fcfe9b99e28f4abbc2f49f50d263b44e428e30f33bf5472747b4  llvm-0003-Fix-DynamicLibrary-to-build-with-musl-libc.patch
1870f910a6f5f2ba6144bd079ec55ed879fe8fd8b1b1b384935f36da43e5f114  llvm-nm-workaround.patch
be7794ed0cec42d6c682ca8e3517535b54555a3defabec83554dbc74db545ad5  llvm-3.7.1.src.tar.xz"
sha512sums="64388ca3100fd36dfcfa7ba8ec8eb8dd40a7388d4363952ec9b4012e5b82494bd445a1b46506b479283121ec2f74fe3dc07b154f5c76db27b6f5b1af50c265aa  llvm-0001-Add-Musl-MuslEABI-and-Musl-EABIHF-triples.patch
4cb3fabbb627b596ce398ed717c66ad20bbea7092ba30751520cc5a63d38e1ac53d23e98a6ad82121ddcf2434383ba5cadbc2990f99a4528e99c6e2160c2f725  llvm-0002-Fix-build-with-musl-libc.patch
19bfb9282455d39d07dbb2b1293b03a45c57d522fbb9c5e58dac034200669628b97e7a90cd4ff5d52d9bb79acfccbef653d8a1140a7f0589ecd6f9b7c4ba0eb6  llvm-0003-Fix-DynamicLibrary-to-build-with-musl-libc.patch
11db6f3c5d697bc536c7d053530f7a5572756185e16399c32c31306861b58046ca9bc14b8d8097758c00a8c1a7026cbfb75636c0e697e59c53dda5848f93b006  llvm-nm-workaround.patch
ac521debc02f6deba96ef975d6a546b0c5c77299c1dbf5e1b87a7974ff5e7fd715bd7e384b92d9adf572ce47130bdbf6d3c648eb0d7f72f16f976292e4909e90  llvm-3.7.1.src.tar.xz"
